<?php
require_once('tcpdf/tcpdf.php');

// result.txt 파일 읽기
$dataFile = 'result.txt';
if (!file_exists($dataFile)) {
    die('Error: result.txt 파일이 존재하지 않습니다.');
}

$data = file($dataFile, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
$headers = explode("|", array_shift($data));
$reportData = [];

foreach ($data as $line) {
    $values = explode("|", $line);
    $reportData[] = array_combine($headers, $values);
}

// TCPDF 객체 생성
$pdf = new TCPDF();
$pdf->SetCreator(PDF_CREATOR);
$pdf->SetAuthor('Linux Server Audit');
$pdf->SetTitle('Linux Server Monthly Report');
$pdf->SetSubject('Server Inspection Report');
$pdf->SetMargins(10, 10, 10);
$pdf->SetAutoPageBreak(TRUE, 10);
$pdf->AddPage();
$pdf->SetFont('NanumGothic', '', 10);

// 제목 출력
$pdf->SetFont('NanumGothic', 'B', 14);
$pdf->Cell(0, 10, '서버 점검 리포트', 0, 1, 'C');
$pdf->Ln(5);
$pdf->SetFont('NanumGothic', '', 10);

foreach ($reportData as $row) {
    $pdf->SetFont('NanumGothic', 'B', 12);
    $pdf->Cell(0, 10, "서버 정보", 0, 1, 'L');
    $pdf->SetFont('NanumGothic', '', 10);
    
    $pdf->MultiCell(0, 6, "서버명: " . $row['server_name'], 0, 'L');

    // 서버 IP 주소 디코드 및 출력
    $pdf->MultiCell(0, 6, "서버 IP:", 0, 'L');
    $serverIPs = json_decode($row['sc_srvip'], true);
    foreach ($serverIPs as $ipInfo) {
        $pdf->MultiCell(0, 6, "{$ipInfo['sc_srvipId']} - {$ipInfo['sc_srvip']}", 0, 'L');
    }
    $pdf->Ln(5);

    $pdf->MultiCell(0, 6, "운영체제: " . $row['sc_os'], 0, 'L');
    $pdf->MultiCell(0, 6, "커널 버전: " . $row['sc_kernel'], 0, 'L');
    $pdf->Ln(5);

    $pdf->SetFont('NanumGothic', 'B', 12);
    $pdf->Cell(0, 10, "네트워크 상태", 0, 1, 'L');
    $pdf->SetFont('NanumGothic', '', 10);

    // 네트워크 인터페이스 디코드 및 출력
    $pdf->MultiCell(0, 6, "네트워크 인터페이스:", 0, 'L');
    $networkInterfaces = json_decode($row['sc_net'], true);
    foreach ($networkInterfaces as $netInfo) {
        $pdf->MultiCell(0, 6, "{$netInfo['sc_netId']} - {$netInfo['sc_netRe']}", 0, 'L');
    }
    $pdf->Ln(5);

    $pdf->SetFont('NanumGothic', 'B', 12);
    $pdf->Cell(0, 10, "시스템 리소스", 0, 1, 'L');
    $pdf->SetFont('NanumGothic', '', 10);

    $pdf->MultiCell(0, 6, "로드 평균 (Load Average): " . $row['sc_avg'], 0, 'L');
    $pdf->MultiCell(0, 6, "Uptime: " . $row['sc_uptime'], 0, 'L');
    $pdf->MultiCell(0, 6, "CPU 정보: " . $row['sc_cpuinfo'], 0, 'L');
    $pdf->MultiCell(0, 6, "CPU 코어 수: " . $row['sc_cpucores'], 0, 'L');
    $pdf->MultiCell(0, 6, "CPU 사용률: " . $row['sc_cpuusage'] . " %", 0, 'L');
    $pdf->MultiCell(0, 6, "메모리 사용량: " . $row['sc_memusage'] . " %", 0, 'L');
    $pdf->Ln(5);

    // 웹 서버 정보 (기동 중인 경우만)
    if (!empty($row['sc_apache'])) {
        $pdf->SetFont('NanumGothic', 'B', 12);
        $pdf->Cell(0, 10, "Apache 웹 서버", 0, 1, 'L');
        $pdf->SetFont('NanumGothic', '', 10);
        $pdf->MultiCell(0, 6, "Apache 버전: " . $row['sc_apache'], 0, 'L');
        $pdf->Ln(5);
    }

    // WAS (Tomcat) 정보 (기동 중인 경우만)
    if (!empty($row['sc_tomcat'])) {
        $pdf->SetFont('NanumGothic', 'B', 12);
        $pdf->Cell(0, 10, "Tomcat WAS 서버", 0, 1, 'L');
        $pdf->SetFont('NanumGothic', '', 10);
        $pdf->MultiCell(0, 6, "Tomcat 정보:", 0, 'L');
        $tomcats = json_decode($row['sc_tomcat'], true);
        foreach ($tomcats as $tomcat) {
            $pdf->MultiCell(0, 6, "버전: {$tomcat['sc_tomVer']}, AJP 포트: {$tomcat['sc_tomAjpPort']}, HTTP 포트: {$tomcat['sc_tomHttpPort']}", 0, 'L');
        }
        $pdf->Ln(5);
    }

    // DB 정보 (기동 중인 경우만)
    if (!empty($row['sc_db'])) {
        $pdf->SetFont('NanumGothic', 'B', 12);
        $pdf->Cell(0, 10, "데이터베이스 (DB) 서버", 0, 1, 'L');
        $pdf->SetFont('NanumGothic', '', 10);
        $pdf->MultiCell(0, 6, "DB 정보:", 0, 'L');
        $databases = json_decode($row['sc_db'], true);
        foreach ($databases as $db) {
            $pdf->MultiCell(0, 6, "버전: {$db['sc_dbVer']}, 인스턴스 타입: {$db['sc_dbInstType']}, 데이터 경로: {$db['sc_dbData']}", 0, 'L');
        }
        $pdf->Ln(5);
    }

    $pdf->SetFont('NanumGothic', 'B', 12);
    $pdf->Cell(0, 10, "로그 및 보안", 0, 1, 'L');
    $pdf->SetFont('NanumGothic', '', 10);

    $pdf->MultiCell(0, 6, "시스템 로그 (messages): " . implode("\n", json_decode($row['sc_meslog'], true)), 0, 'L');
    $pdf->MultiCell(0, 6, "보안 로그 (secure): " . implode("\n", json_decode($row['sc_seclog'], true)), 0, 'L');
    $pdf->MultiCell(0, 6, "dmesg 로그: " . implode("\n", json_decode($row['sc_dmeslog'], true)), 0, 'L');
    $pdf->Ln(10);
}

// PDF 저장 및 출력
$pdf->Output('server_report.pdf', 'D');
?>

