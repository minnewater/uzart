<?php
// 예시: PDO 객체 생성 (실제로는 별도의 설정파일에서 가져올 수도 있음)
$dsn = 'pgsql:host=localhost;port=5432;dbname=your_database';
$user = 'db_user';
$pass = 'db_pass';

try {
    // PDO 연결
    $pdo = new PDO($dsn, $user, $pass);

    // 에러 모드: 예외 모드로 설정
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    // 실제 웹페이지에서 $_POST 로 넘어온다고 가정
    $username       = $_POST['username'];
    $password       = $_POST['password'];  // 실제론 해싱 필요
    $name           = $_POST['name'];
    $position       = $_POST['position'];
    $office_phone   = $_POST['office_phone'];
    $mobile_phone   = $_POST['mobile_phone'];
    $email          = $_POST['email'];

    // 사용자가 선택한 group_name
    // (selectbox나 라디오버튼 등에서 선택받아온다고 가정)
    $selectedGroupName = $_POST['group_name'];

    // 트랜잭션 시작
    $pdo->beginTransaction();

    // 1) users 테이블에 INSERT
    $sqlInsertUser = "
        INSERT INTO users (username, password, name, position, office_phone, mobile_phone, email)
        VALUES (:username, :password, :name, :position, :office_phone, :mobile_phone, :email)
        RETURNING id
    ";
    $stmt = $pdo->prepare($sqlInsertUser);
    $stmt->execute([
        ':username'     => $username,
        ':password'     => $password,   // 실제로는 비밀번호 해싱 적용 권장
        ':name'         => $name,
        ':position'     => $position,
        ':office_phone' => $office_phone,
        ':mobile_phone' => $mobile_phone,
        ':email'        => $email
    ]);

    // PostgreSQL 의 RETURNING 절을 통해 새로 생성된 id를 받아올 수 있음
    $newUserId = $stmt->fetchColumn();  // 생성된 user_id

    // 2) group_name을 이용해 groups 테이블에서 group_id 조회
    $sqlSelectGroup = "SELECT id FROM groups WHERE group_name = :group_name";
    $stmt = $pdo->prepare($sqlSelectGroup);
    $stmt->execute([':group_name' => $selectedGroupName]);
    $groupId = $stmt->fetchColumn();

    // 혹시나 group_name이 없으면 예외 처리할 수도 있음
    if (!$groupId) {
        throw new Exception("해당 그룹이 존재하지 않습니다: " . $selectedGroupName);
    }

    // 3) user_group 테이블에 매핑 INSERT
    $sqlInsertUserGroup = "
        INSERT INTO user_group (user_id, group_id)
        VALUES (:user_id, :group_id)
    ";
    $stmt = $pdo->prepare($sqlInsertUserGroup);
    $stmt->execute([
        ':user_id'  => $newUserId,
        ':group_id' => $groupId
    ]);

    // 트랜잭션 커밋
    $pdo->commit();

    echo "사용자 등록 및 그룹 매핑이 성공적으로 완료되었습니다.";

} catch (Exception $e) {
    // 에러 발생 시 롤백
    if ($pdo->inTransaction()) {
        $pdo->rollBack();
    }
    // 실제론 에러 페이지로 보내거나, 로그를 남기는 등의 처리를 함
    echo "에러가 발생했습니다: " . $e->getMessage();
}

